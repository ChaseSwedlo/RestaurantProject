@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@model MenuViewModel;
<link rel="stylesheet" href="./css/menu.css">
<header>
	<div class="menu-header-overlay"></div>
	<div class="container header-content">
		<div class="header-top">
			<div class="hamburger-container">
				<div class="hamburger">
					<span class="hamburger-line"></span>
					<span class="hamburger-line"></span>
				</div>
				<div class="hamburger-menu">
					<a href="@Url.Action("Index", "Home")" class="nav-link">Home</a>

					<a href="@Url.Action("Index", "Reserve")" class="nav-link">Find a Table</a>
					<a href="@Url.Action("Index", "Menu")" class="nav-link">Our Menu</a>
					@if (SignInManager.IsSignedIn(User)) {
						<form id="logoutForm" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
							<button id="logout" type="submit" class="nav-link logout-btn">Logout</button>
						</form>
					} else {
						<a class="nav-link" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
					}
					<a href="@Url.Action("Index", "Manage")" class="nav-link">Management</a>
				</div>
			</div>
			<a href="index.html" class="logo serif-font">Elevé</a>
			<button class="find-a-table-btn"><a class="reserve-header-btn" href="@Url.Action("Index", "Reserve")">Find a Table</a></button>
		</div>
		<div class="header-text serif-font">
			<h1>OUR MENU</h1>
			<p>Where Every Dish Tells a Story</p>
		</div>
	</div>
</header>

<div class="row menu-wrapper">
	<div class="col">

		<h2 class="menu-title">Appetizers</h2>

		@* display appetizers *@

		@foreach (var item in Model.Appetizers)
		{
			<div class="menu-box">
				<div class="menu-name">
					@Html.DisplayFor(modelItem => item.Name)
				</div>
				<div class="menu-description">
					@Html.DisplayFor(modelItem => item.Description)
				</div>
				<div class="menu-price">
					$@Html.DisplayFor(modelItem => item.Price)
				</div>
			</div>
		}



		<h2 class="menu-title">Deserts</h2>

		@* display Deserts *@

		@foreach (var item in Model.Deserts)
		{
			<div class="menu-name">
				@Html.DisplayFor(modelItem => item.Name)
			</div>
			<div class="menu-description">
				@Html.DisplayFor(modelItem => item.Description)
			</div>
			<div class="menu-price">
				@Html.DisplayFor(modelItem => item.Price)
			</div>
		}



	</div>
	<div class="col">

		<h2 class="menu-title">Mains</h2>

		@* display Mains *@


		@foreach (var item in Model.Entrees)
		{
			<div class="menu-name">
				@Html.DisplayFor(modelItem => item.Name)
			</div>
			<div class="menu-description">
				@Html.DisplayFor(modelItem => item.Description)
			</div>
			<div class="menu-price">
				@Html.DisplayFor(modelItem => item.Price)
			</div>
		}
		<h2 class="menu-title">Drinks</h2>

		@* display Drinks *@

		@foreach (var item in Model.Drinks)
		{
			<div class="menu-name">
				@Html.DisplayFor(modelItem => item.Name)
			</div>
			<div class="menu-description">
				@Html.DisplayFor(modelItem => item.Description)
			</div>
			<div class="menu-price">
				@Html.DisplayFor(modelItem => item.Price)
			</div>
		}
	</div>
</div>


